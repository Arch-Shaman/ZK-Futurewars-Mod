local start1 = {596, 3566}
local start2 = {3432, 701}
local start3 = {3571, 3567}
local start4 = {332, 340}

local box1_aggressive = {
	{1474, 4095},
	{1469, 4058},
	{1471, 4034},
	{1468, 4015},
	{1445, 3988},
	{1432, 3957},
	{1427, 3845},
	{1395, 3806},
	{1381, 3777},
	{1383, 3736},
	{1365, 3653},
	{1383, 3624},
	{1306, 3456},
	{1216, 3434},
	{1164, 3439},
	{1120, 3427},
	{1110, 3390},
	{1176, 3385},
	{1171, 3344},
	{1187, 3287},
	{1168, 3237},
	{1161, 3199},
	{1218, 3117},
	{1181, 3076},
	{1171, 3071},
	{1167, 3047},
	{1249, 2947},
	{1116, 2841},
	{1042, 2886},
	{966, 2882},
	{940, 2906},
	{881, 2887},
	{843, 2904},
	{783, 2943},
	{741, 2954},
	{673, 2962},
	{504, 2956},
	{445, 2936},
	{441, 2911},
	{542, 2868},
	{609, 2861},
	{594, 2835},
	{507, 2819},
	{489, 2797},
	{527, 2777},
	{613, 2770},
	{623, 2733},
	{506, 2696},
	{482, 2651},
	{419, 2589},
	{340, 2509},
	{273, 2504},
	{223, 2482},
	{187, 2464},
	{144, 2481},
	{124, 2495},
	{57, 2497},
	{52, 2552},
	{37, 2567},
	{3, 2571},
	{2, 4093},
	{1382, 4094},
}

local box2_aggressive = {
	{2577, 0},
	{2557, 31},
	{2515, 44},
	{2505, 57},
	{2504, 89},
	{2517, 118},
	{2516, 142},
	{2503, 222},
	{2520, 260},
	{2535, 330},
	{2565, 359},
	{2606, 442},
	{2613, 509},
	{2629, 566},
	{2643, 657},
	{2667, 680},
	{2744, 706},
	{2777, 723},
	{2822, 767},
	{2853, 820},
	{2886, 852},
	{2890, 904},
	{2865, 964},
	{2798, 1123},
	{2754, 1232},
	{2766, 1275},
	{2856, 1348},
	{2902, 1382},
	{2949, 1394},
	{2990, 1387},
	{3025, 1365},
	{3092, 1368},
	{3257, 1324},
	{3320, 1296},
	{3276, 1273},
	{3268, 1247},
	{3299, 1227},
	{3329, 1230},
	{3367, 1253},
	{3378, 1276},
	{3361, 1332},
	{3384, 1345},
	{3431, 1346},
	{3514, 1346},
	{3619, 1355},
	{3638, 1386},
	{3659, 1395},
	{3703, 1398},
	{3740, 1404},
	{3796, 1400},
	{3937, 1399},
	{3983, 1383},
	{4025, 1370},
	{4094, 1370},
	{4094, 0},
	{3995, 0},
}

local box3_aggressive = {
	{2552, 4093},
	{2547, 4011},
	{2522, 3998},
	{2543, 3968},
	{2554, 3908},
	{2601, 3805},
	{2623, 3793},
	{2672, 3688},
	{2673, 3624},
	{2649, 3581},
	{2671, 3559},
	{2677, 3460},
	{2741, 3437},
	{2777, 3346},
	{2730, 3238},
	{2703, 3131},
	{2682, 3054},
	{2598, 2945},
	{2722, 2894},
	{2952, 2999},
	{3048, 3027},
	{3174, 3037},
	{3253, 3017},
	{3293, 2941},
	{3390, 2875},
	{3433, 2892},
	{3464, 2865},
	{3509, 2853},
	{3561, 2852},
	{3646, 2811},
	{3673, 2786},
	{3763, 2784},
	{3825, 2809},
	{3953, 2831},
	{4095, 2862},
	{4095, 4093},
}

local box4_aggressive = {
	{1415, 2},
	{1395, 84},
	{1366, 113},
	{1361, 146},
	{1374, 201},
	{1386, 259},
	{1369, 327},
	{1382, 360},
	{1388, 409},
	{1355, 446},
	{1276, 518},
	{1196, 643},
	{1193, 739},
	{1156, 848},
	{1178, 933},
	{1191, 1041},
	{1163, 1130},
	{1139, 1187},
	{1165, 1295},
	{1233, 1392},
	{1171, 1445},
	{1071, 1344},
	{921, 1268},
	{826, 1264},
	{703, 1309},
	{651, 1360},
	{552, 1384},
	{457, 1466},
	{379, 1458},
	{296, 1449},
	{209, 1474},
	{2, 1463},
	{2, 2},
}

local box1 = {
	{1471, 4095},
	{1456, 4025},
	{1434, 3992},
	{1428, 3959},
	{1427, 3928},
	{1425, 3880},
	{1382, 3813},
	{1371, 3777},
	{1364, 3730},
	{1366, 3669},
	{1381, 3645},
	{1384, 3622},
	{1356, 3543},
	{1325, 3502},
	{1301, 3474},
	{1238, 3451},
	{1157, 3446},
	{1125, 3437},
	{1052, 3381},
	{963, 3296},
	{890, 3203},
	{821, 3118},
	{698, 2988},
	{661, 2954},
	{557, 2964},
	{497, 2944},
	{473, 2930},
	{472, 2913},
	{485, 2889},
	{583, 2862},
	{605, 2859},
	{617, 2850},
	{616, 2818},
	{611, 2781},
	{619, 2769},
	{620, 2746},
	{608, 2740},
	{586, 2729},
	{561, 2714},
	{526, 2696},
	{486, 2662},
	{441, 2619},
	{396, 2571},
	{358, 2512},
	{278, 2503},
	{258, 2499},
	{174, 2464},
	{118, 2492},
	{70, 2496},
	{51, 2524},
	{54, 2548},
	{45, 2560},
	{0, 2566},
	{2, 4091},
	{1426, 4092},
}

local box2 = {
{4088, 1361},
	{4002, 1364},
	{3953, 1391},
	{3864, 1394},
	{3733, 1398},
	{3630, 1395},
	{3622, 1357},
	{3599, 1345},
	{3517, 1349},
	{3392, 1349},
	{3379, 1262},
	{3359, 1235},
	{3335, 1225},
	{3353, 1198},
	{3424, 1169},
	{3459, 1109},
	{3448, 1072},
	{3437, 1061},
	{3453, 1019},
	{3444, 979},
	{3415, 934},
	{3336, 943},
	{3262, 952},
	{3108, 810},
	{2992, 725},
	{2697, 685},
	{2659, 640},
	{2629, 539},
	{2584, 382},
	{2551, 267},
	{2526, 42},
	{2577, 49},
	{2586, 1},
	{4089, 4},
	{4088, 1320},
}

local box3 = {
	{2556, 4094},
	{2551, 4010},
	{2540, 3968},
	{2563, 3934},
	{2568, 3908},
	{2586, 3828},
	{2612, 3824},
	{2637, 3785},
	{2670, 3725},
	{2685, 3667},
	{2673, 3619},
	{2675, 3605},
	{2653, 3579},
	{2653, 3563},
	{2676, 3542},
	{2685, 3505},
	{2665, 3448},
	{2651, 3440},
	{2666, 3430},
	{2694, 3438},
	{2730, 3442},
	{2779, 3387},
	{2777, 3349},
	{2828, 3306},
	{2912, 3209},
	{2988, 3142},
	{3059, 3060},
	{3083, 3030},
	{3189, 3026},
	{3254, 3009},
	{3279, 2952},
	{3298, 2929},
	{3325, 2920},
	{3327, 2900},
	{3380, 2872},
	{3411, 2869},
	{3429, 2887},
	{3446, 2891},
	{3477, 2875},
	{3507, 2857},
	{3554, 2860},
	{3577, 2853},
	{3626, 2824},
	{3665, 2805},
	{3677, 2784},
	{3792, 2800},
	{3892, 2808},
	{3958, 2816},
	{4085, 2853},
	{4088, 3132},
	{4092, 4093},
	{2583, 4092},
}

local box4 = {
	{1, 1466},
	{47, 1475},
	{131, 1485},
	{185, 1483},
	{266, 1460},
	{335, 1455},
	{411, 1467},
	{414, 1489},
	{449, 1487},
	{516, 1443},
	{526, 1418},
	{545, 1400},
	{591, 1385},
	{630, 1363},
	{672, 1357},
	{681, 1347},
	{692, 1323},
	{731, 1285},
	{786, 1260},
	{832, 1156},
	{832, 1143},
	{948, 1038},
	{1011, 954},
	{1004, 913},
	{1022, 863},
	{1057, 796},
	{1177, 741},
	{1193, 704},
	{1219, 656},
	{1245, 587},
	{1305, 489},
	{1357, 450},
	{1358, 387},
	{1349, 327},
	{1385, 284},
	{1383, 239},
	{1367, 195},
	{1371, 110},
	{1371, 2},
	{1, 2},
	{2, 1380},
	{6, 1428},
}

local sputGametype = Spring.Utilities.Gametype

if sputGametype.isCompStomp() or sputGametype.isBigTeams() then -- coop & big teams both use aggressive boxes.
	box1 = box1_aggressive
	box2 = box2_aggressive
	box3 = box3_aggressive
	box4 = box4_aggressive
end

if sputGametype.isFFA() then 
	boxes[0] = {startpoints = start1, boxes = box1, nameLong = "Southwest", nameShort = "SW"}
	boxes[1] = {startpoints = start2, boxes = box2, nameLong = "Northeast", nameShort = "NE"}
	boxes[2] = {startpoints = start3, boxes = box3, nameLong = "Southeast", nameShort = "SE"}
	boxes[3] = {startpoints = start4, boxes = box4, nameLong = "Northwest", nameShort = "NW"}
	return boxes, {4}
end

local boxes = {}
boxes[0] = {startpoints = {}, boxes = {}, nameLong = "Magma Fanatics", nameShort = "Magma"}
boxes[1] = {startpoints = {}, boxes = {}, nameLong = "Lava Lovers", nameShort = "Lava"}

if sputGametype.isBigTeams() or sputGametype.isCompStomp() then -- pick two.
	local r = math.random(1, 6)
	if r == 1 then
		boxes[0].startpoints = {start1, start2}
		boxes[0].boxes = {box1, box2}
		boxes[1].startpoints = {start3, start4}
		boxes[1].boxes = {box3, box4}
	elseif r == 2 then
		boxes[0].startpoints = {start1, start3}
		boxes[0].boxes = {box1, box3}
		boxes[1].startpoints = {start2, start4}
		boxes[1].boxes = {box2, box4}
	elseif r == 3 then
		boxes[0].startpoints = {start1, start4}
		boxes[0].boxes = {box1, box4}
		boxes[1].startpoints = {start2, start3}
		boxes[1].boxes = {box2, box3}
	elseif r == 4 then
		boxes[0].startpoints = {start2, start3}
		boxes[0].boxes = {box2, box3}
		boxes[1].startpoints = {start1, start4}
		boxes[1].boxes = {box1, box4}
	elseif r == 5 then
		boxes[0].startpoints = {start2, start4}
		boxes[0].boxes = {box2, box4}
		boxes[1].startpoints = {start1, start3}
		boxes[1].boxes = {box1, box3}
	else
		boxes[0].startpoints = {start3, start4}
		boxes[0].boxes = {box3, box4}
		boxes[1].startpoints = {start1, start2}
		boxes[1].boxes = {box1, box2}
	end
else -- pick 1
	r = math.random(1, 6)
	if r == 1 then -- NE vs SW
		boxes[0].startpoints = {start1}
		boxes[0].boxes = {box1}
		boxes[1].startpoints = {start2}
		boxes[1].boxes = {box2}
	elseif r == 2 then -- SE vs SW
		boxes[0].startpoints = {start1}
		boxes[0].boxes = {box1}
		boxes[1].startpoints = {start3}
		boxes[1].boxes = {box3}
	elseif r == 3 then -- NW vs NE
		boxes[0].startpoints = {start4}
		boxes[0].boxes = {box4}
		boxes[1].startpoints = {start2}
		boxes[1].boxes = {box2}
	elseif r == 4 then -- NW vs SE
		boxes[0].startpoints = {start4}
		boxes[0].boxes = {box4}
		boxes[1].startpoints = {start3}
		boxes[1].boxes = {box3}
	elseif r == 5 then -- NvS
		boxes[0].startpoints = {start1}
		boxes[0].boxes = {box1}
		boxes[1].startpoints = {start4}
		boxes[1].boxes = {box4}
	else -- NvS variant 2
		boxes[0].startpoints = {start3}
		boxes[0].boxes = {box3}
		boxes[1].startpoints = {start2}
		boxes[1].boxes = {box2}
	end
end

return boxes, {2}	
